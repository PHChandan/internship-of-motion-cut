import tkinter as tk
import random

class Game2048:
    def __init__(self, master):
        self.master = master
        self.master.title("2048 Game")
        self.grid = [[0] * 4 for _ in range(4)]
        self.create_widgets()
        self.add_new_tile()
        self.add_new_tile()
        self.update_ui()

    def create_widgets(self):
        self.frames = [[tk.Frame(self.master, bg="light gray", width=100, height=100) for _ in range(4)] for _ in range(4)]
        self.labels = [[tk.Label(self.frames[i][j], text='', font=('Helvetica', 24), width=4, height=2) for j in range(4)] for i in range(4)]
        
        for i in range(4):
            for j in range(4):
                self.frames[i][j].grid(row=i, column=j, padx=5, pady=5)
                self.labels[i][j].pack()

        self.master.bind("<Up>", self.move_up)
        self.master.bind("<Down>", self.move_down)
        self.master.bind("<Left>", self.move_left)
        self.master.bind("<Right>", self.move_right)

    def update_ui(self):
        for i in range(4):
            for j in range(4):
                num = self.grid[i][j]
                self.labels[i][j].config(text=str(num) if num != 0 else '', bg='light gray' if num == 0 else 'white')

    def add_new_tile(self):
        empty_cells = [(i, j) for i in range(4) for j in range(4) if self.grid[i][j] == 0]
        if empty_cells:
            i, j = random.choice(empty_cells)
            self.grid[i][j] = 2 if random.random() < 0.9 else 4

    def move_up(self, event):
        self.move(0, 1)
    
    def move_down(self, event):
        self.move(0, -1)
    
    def move_left(self, event):
        self.move(1, 1)
    
    def move_right(self, event):
        self.move(1, -1)

    def move(self, axis, direction):
        moved = False
        for _ in range(4):
            for i in range(4):
                for j in range(4):
                    if axis == 0:  # Vertical move
                        if self.grid[i][j] != 0 and i + direction >= 0 and i + direction < 4 and self.grid[i + direction][j] == 0:
                            self.grid[i + direction][j] = self.grid[i][j]
                            self.grid[i][j] = 0
                            moved = True
                    else:  # Horizontal move
                        if self.grid[j][i] != 0 and i + direction >= 0 and i + direction < 4 and self.grid[j][i + direction] == 0:
                            self.grid[j][i + direction] = self.grid[j][i]
                            self.grid[j][i] = 0
                            moved = True
        if moved:
            self.add_new_tile()
            self.update_ui()

if __name__ == "__main__":
    root = tk.Tk()
    game = Game2048(root)
    root.mainloop()
